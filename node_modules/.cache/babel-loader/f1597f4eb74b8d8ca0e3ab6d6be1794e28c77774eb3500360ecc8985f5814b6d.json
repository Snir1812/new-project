{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sales\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\Snir Projects\\\\new-project\\\\src\\\\components\\\\signup\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"./Signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup(_ref) {\n  _s();\n  let {\n    onLoginClick,\n    onSignupClick\n  } = _ref;\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await fetch(\"/api/users\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          usernameOrEmail,\n          password\n        })\n      });\n      // The update succeeded, clear the form and error message\n      setUsernameOrEmail(\"\");\n      setPassword(\"\");\n      setErrorMessage(\"\");\n    } catch (err) {\n      // The update failed, show an error message\n      setErrorMessage(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"loginForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labelDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username or email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"textInput\",\n        required: true,\n        type: \"text\",\n        id: \"usernameOrEmail\",\n        name: \"usernameOrEmail\",\n        value: usernameOrEmail,\n        onChange: event => setUsernameOrEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labelDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"textInput\",\n        required: true,\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \" \", errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonForm\",\n      type: \"submit\",\n      children: \"Submite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSignupClick,\n      children: \"I forgot password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"Um+usiPxPTvp0v36C8FkjHW8rlk=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Signup","onLoginClick","onSignupClick","usernameOrEmail","setUsernameOrEmail","password","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","err","message","event","target","value"],"sources":["C:/Users/sales/OneDrive/שולחן העבודה/Snir Projects/new-project/src/components/signup/Signup.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./Signup.css\";\r\n\r\nfunction Signup({ onLoginClick, onSignupClick }) {\r\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await fetch(\"/api/users\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ usernameOrEmail, password }),\r\n      });\r\n      // The update succeeded, clear the form and error message\r\n      setUsernameOrEmail(\"\");\r\n      setPassword(\"\");\r\n      setErrorMessage(\"\");\r\n    } catch (err) {\r\n      // The update failed, show an error message\r\n      setErrorMessage(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"loginForm\" onSubmit={handleSubmit}>\r\n      <div className=\"labelDiv\">\r\n        <label>Username or email</label>\r\n        <input\r\n          className=\"textInput\"\r\n          required\r\n          type=\"text\"\r\n          id=\"usernameOrEmail\"\r\n          name=\"usernameOrEmail\"\r\n          value={usernameOrEmail}\r\n          onChange={(event) => setUsernameOrEmail(event.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"labelDiv\">\r\n        <label>Password</label>\r\n        <input\r\n          className=\"textInput\"\r\n          required\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        />\r\n      </div>{\" \"}\r\n      {errorMessage && <div>{errorMessage}</div>}\r\n      <button className=\"buttonForm\" type=\"submit\">\r\n        Submite\r\n      </button>{\" \"}\r\n      <button onClick={onSignupClick}>I forgot password</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,cAAc;AAAC;AAEtB,SAASC,MAAM,OAAkC;EAAA;EAAA,IAAjC;IAAEC,YAAY;IAAEC;EAAc,CAAC;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACF,MAAMC,KAAK,CAAC,YAAY,EAAE;QACxBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,eAAe;UAAEE;QAAS,CAAC;MACpD,CAAC,CAAC;MACF;MACAD,kBAAkB,CAAC,EAAE,CAAC;MACtBE,WAAW,CAAC,EAAE,CAAC;MACfE,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZ;MACAV,eAAe,CAACU,GAAG,CAACC,OAAO,CAAC;IAC9B;EACF,CAAC;EAED,oBACE;IAAM,SAAS,EAAC,WAAW;IAAC,QAAQ,EAAEV,YAAa;IAAA,wBACjD;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB;QAAA,UAAO;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAQ,eAChC;QACE,SAAS,EAAC,WAAW;QACrB,QAAQ;QACR,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,iBAAiB;QACpB,IAAI,EAAC,iBAAiB;QACtB,KAAK,EAAEN,eAAgB;QACvB,QAAQ,EAAGiB,KAAK,IAAKhB,kBAAkB,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5D;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB;QAAA,UAAO;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvB;QACE,SAAS,EAAC,WAAW;QACrB,QAAQ;QACR,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,UAAU;QACf,KAAK,EAAEjB,QAAS;QAChB,QAAQ,EAAGe,KAAK,IAAKd,WAAW,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,EAAC,GAAG,EACTf,YAAY,iBAAI;MAAA,UAAMA;IAAY;MAAA;MAAA;MAAA;IAAA,QAAO,eAC1C;MAAQ,SAAS,EAAC,YAAY;MAAC,IAAI,EAAC,QAAQ;MAAA,UAAC;IAE7C;MAAA;MAAA;MAAA;IAAA,QAAS,EAAC,GAAG,eACb;MAAQ,OAAO,EAAEL,aAAc;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAEX;AAAC,GAzDQF,MAAM;AAAA,KAANA,MAAM;AA2Df,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}